<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.reprap</groupId>
	<artifactId>reprapgui</artifactId>
	<version>0.0.3</version>
	<name>RepRap GUI project</name>
	<description>A new RepRap GUI to control open-source FFF printing</description>

	<!-- Declare project level dependency versions -->
	<properties>
		<mig.layout.version>3.7.4</mig.layout.version>
		<junit.version>4.10</junit.version>
		<spring.version>3.0.6.RELEASE</spring.version>
		<slf4j.version>1.6.4</slf4j.version>
		<windowlicker-version>1.0.0</windowlicker-version>
		<jtattoo.version>1.0.0</jtattoo.version>
		<hamcrest.version>1.1</hamcrest.version>
		<mockito.version>1.8.5</mockito.version>
		<rxtx.version>2.1.7</rxtx.version>
		<logback.version>0.9.29</logback.version>
		<cglib.version>2.2.2</cglib.version>
		<ockito.version>1.0.0</ockito.version>
		<findbugs.version>1.4</findbugs.version>
	</properties>

	<scm>
		<connection>scm:git:git@github.com:davijeb/reprapgui.git</connection>
		<url>scm:git:git@github.com:davijeb/reprapgui.git</url>
		<developerConnection>
			scm:git:git@github.com:davijeb/reprapgui.git
		</developerConnection>
	</scm>

	<!-- Project binary dependencies -->
	<dependencies>

		<!-- Mig layout for Swing front-end dependency -->
		<dependency>
			<groupId>com.miglayout</groupId>
			<artifactId>miglayout</artifactId>
			<version>${mig.layout.version}</version>
		</dependency>

		<!-- JUnit test dependency -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>

		<!-- Windowlicker test framework -->
		<dependency>
			<groupId>com.objogate.wl</groupId>
			<artifactId>windowlicker-core</artifactId>
			<version>${windowlicker-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.objogate.wl</groupId>
			<artifactId>windowlicker-swing</artifactId>
			<version>${windowlicker-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.objogate.wl</groupId>
			<artifactId>windowlicker-web</artifactId>
			<version>${windowlicker-version}</version>
			<scope>test</scope>
		</dependency>

		<!-- JTatoo look and feel -->
		<dependency>
			<groupId>com.jtattoo</groupId>
			<artifactId>plaf</artifactId>
			<version>${jtattoo.version}</version>
		</dependency>

		<!-- Hamcrest (possibly not needed) -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<!-- Mockito mocking test framework -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<!-- Spring framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<!-- The SLF4J logging frame work -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- RXTX is a native lib providing serial and parallel communication -->
		<dependency>
			<groupId>org.rxtx</groupId>
			<artifactId>rxtx</artifactId>
			<version>${rxtx.version}</version>
		</dependency>

		<!-- Logback classic -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>maven-plugins</groupId>
			<artifactId>maven-findbugs-plugin</artifactId>
			<version>${findbugs.version}</version>
		</dependency>

		<dependency>
			<groupId>com.springockito</groupId>
			<artifactId>springockito</artifactId>
			<version>${ockito.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- cglib is a powerful, high performance and quality Code Generation 
			Library. It is used to extend JAVA classes and implements interfaces at runtime. -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>${cglib.version}</version>
		</dependency>

		<!-- Not sure we really want this as a replacement for Windowlicker... -->
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-swing</artifactId>
			<version>1.2.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>1.3.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
				<executions>
					<execution>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.10</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.3.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.2.1</version>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.3.3</version>
				<configuration>
					<outputEncoding>html</outputEncoding>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

</project>